from tkinter import *
from tkinter import messagebox
from tkinter import ttk
from math import *
import random

def debug():
    try:
        num1 = int(entry1.get())
        num2 = int(entry2.get())
    except ValueError:
            messagebox.showerror('Error', 'Please enter a real number!')
            quit()

def debugroot():
    try:
        num1 = int(spinbox.get())
    except ValueError:
            messagebox.showerror('Error', 'Please enter a real number!')
            quit()

def add():
    debug()
    num1 = int(entry1.get())
    num2 = int(entry2.get())
    summary = num1 + num2
    messagebox.showinfo('Awnser', '{} + {} = {}'.format(num1, num2, summary))

def subtract():
    debug()
    num1 = int(entry1.get())
    num2 = int(entry2.get())
    summary = num1 - num2
    messagebox.showinfo('Awnser', '{} - {} = {}'.format(num1, num2, summary))

def multiply():
    debug()
    num1 = int(entry1.get())
    num2 = int(entry2.get())
    summary = num1 * num2
    messagebox.showinfo('Awnser', '{} x {} = {}'.format(num1, num2, summary))

def divise():
    debug()
    num1 = int(entry1.get())
    num2 = int(entry2.get())
    try:
        summary = num1 / num2
    except ZeroDivisionError:
        messagebox.showerror('Error', 'Sorry you cannot divide by zero!')
        exit()
    summary = num1 / num2
    messagebox.showinfo('Awnser', '{} / {} = {}'.format(num1, num2, summary))

def root():
    debugroot()
    num1 = int(spinbox.get())
    summary = sqrt(num1)
    messagebox.showinfo('Awnser', 'âˆš{} = {}'.format(num1, summary))

def addition():
    global entry1, entry2
    addition = Tk()
    addition.title('Addition Application')
    addition.configure(bg='LIGHTGREEN')

    lbl1 = Label(addition, text='Addition Calculator', bg='BLUE', fg='WHITE', relief='ridge').grid(row=0, column=1)
    lbl2 = Label(addition, text='Number One: ', bg='LIGHTGREEN', fg='RED').grid(row=1, column=0)
    lbl3 = Label(addition, text='Number Two: ', bg='LIGHTGREEN', fg='RED').grid(row=2, column=0)

    entry1 = Entry(addition)
    entry1.grid(row=1, column=1)

    entry2 = Entry(addition)
    entry2.grid(row=2, column=1)

    btn1 = Button(addition, text='Calculate', fg='LIGHTGREEN', command=add).grid(row=3, column=1)

    mainloop()

def subtraction():
    global entry1, entry2
    subtraction = Tk()
    subtraction.title('Subtraction Application')
    subtraction.configure(bg='LIGHTGREEN')

    lbl1 = Label(subtraction, text='Subtraction Calculator', bg='BLUE', fg='WHITE', relief='ridge').grid(row=0, column=1)
    lbl2 = Label(subtraction, text='Number One: ', bg='LIGHTGREEN', fg='RED').grid(row=1, column=0)
    lbl3 = Label(subtraction, text='Number Two: ', bg='LIGHTGREEN', fg='RED').grid(row=2, column=0)

    entry1 = Entry(subtraction)
    entry1.grid(row=1, column=1)

    entry2 = Entry(subtraction)
    entry2.grid(row=2, column=1)

    btn1 = Button(subtraction, text='Calculate', fg='LIGHTGREEN', command=subtract).grid(row=3, column=1)

    mainloop()

def multiplication():
    global entry1, entry2
    multiplication = Tk()
    multiplication.title('Multiplication Application')
    multiplication.configure(bg='LIGHTGREEN')

    lbl1 = Label(multiplication, text='Multiplication Calculator', bg='BLUE', fg='WHITE', relief='ridge').grid(row=0, column=1)
    lbl2 = Label(multiplication, text='Number One: ', bg='LIGHTGREEN', fg='RED').grid(row=1, column=0)
    lbl3 = Label(multiplication, text='Number Two: ', bg='LIGHTGREEN', fg='RED').grid(row=2, column=0)

    entry1 = Entry(multiplication)
    entry1.grid(row=1, column=1)

    entry2 = Entry(multiplication)
    entry2.grid(row=2, column=1)

    btn1 = Button(multiplication, text='Calculate', fg='LIGHTGREEN', command=multiply).grid(row=3, column=1)

    mainloop()

def division():
    global entry1, entry2
    division = Tk()
    division.title('Division Application')
    division.configure(bg='LIGHTGREEN')

    lbl1 = Label(division, text='Division Calculator', bg='BLUE', fg='WHITE', relief='ridge').grid(row=0, column=1)
    lbl2 = Label(division, text='Number One: ', bg='LIGHTGREEN', fg='RED').grid(row=1, column=0)
    lbl3 = Label(division, text='Number Two: ', bg='LIGHTGREEN', fg='RED').grid(row=2, column=0)

    entry1 = Entry(division)
    entry1.grid(row=1, column=1)

    entry2 = Entry(division)
    entry2.grid(row=2, column=1)

    btn1 = Button(division, text='Calculate', fg='LIGHTGREEN', command=divise).grid(row=3, column=1)

    mainloop()

def squareroot():
    global spinbox
    squareroot = Tk()
    squareroot.title('Square Root Application')
    squareroot.configure(bg='LIGHTGREEN')

    lbl1 = Label(squareroot, text='Square Root Calculator', bg='BLUE', fg='WHITE', relief='ridge').grid(row=0, column=1)
    lbl2 = Label(squareroot, text='Number One: ', bg='LIGHTGREEN', fg='RED').grid(row=1, column=0)

    spinbox1 = Spinbox(squareroot, from_=0, to=100)
    spinbox1.grid(row=1, column=1)

    btn1 = Button(squareroot, text='Calculate', fg='LIGHTGREEN', command=root).grid(row=2, column=1)

    mainloop()

def guessthenumber():
    global amount_of_tries, random_number_generator, spinbox2, guesses
    amount_of_tries = random.randint(10, 15)
    random_number_generator = random.randint(1, 2)
    guesses = []

    guessnumber = Tk()
    guessnumber.configure(bg='LIGHTGREEN')
    lbl1 = Label(guessnumber, text='Guess The Number', bg='BLUE', fg='WHITE', relief='ridge').grid(row=0, column=0)
    lbl2 = Label(guessnumber, text='You Will be given a number between 1 - 500. \nYou will have {} amounts of tries to guess the number. \nGoodluck!'.format(amount_of_tries), bg='LIGHTGREEN', fg='RED').grid(row=1, column=0)
    guessnumber.title('Guess The Number')

    spinbox2 = Spinbox(guessnumber, from_=1, to=500)
    spinbox2.grid(row=2, column=0)

    btn1 = Button(guessnumber, text='Guess', fg='RED', command=guess).grid(row=3, column=0)

    mainloop()

    return amount_of_tries, random_number_generator, spinbox2, guesses

def guess():
    tries_left = 0
    add = 1
    # This tests if the input from the user is a string. They need to input a number.
    try:
        int(spinbox2.get())
    except ValueError:
        messagebox.showerror('Error', 'Sorry please input a real number!')
        exit()

    # Less than, greather than, and equal too.
    if int(spinbox2.get()) < random_number_generator:
        guesses.append(add)
        tries_left = amount_of_tries - sum(guesses)
        messagebox.showinfo('Lower', 'Sorry my number is higher then that! \n You have {} tries left!'.format(str(tries_left)))

    elif int(spinbox2.get()) > random_number_generator:
        guesses.append(add)
        tries_left = amount_of_tries - sum(guesses)
        messagebox.showinfo('Higher', 'Sorry my number is lower then that! \n You have {} tries left!'.format(str(tries_left)))

    elif int(spinbox2.get()) == random_number_generator:
        guesses.append(add)
        messagebox.showinfo('Congratulations', 'Congratulations!\n It took you {} tries!'.format(str(tries_left, str(guesses))))
        exit()

        # This prints their amount of tries at the end of the game.
    if tries_left <= 0:
        messagebox.showerror('Failed!', 'Sorry you failed the game! \nBetter luck next time!')
        exit()

def calculatewindow():
    global window
    window = Tk()
    window.title('''Calculate Hub''')
    window.configure(bg='LIGHTGREEN')

    mb = Menu(window)
    operatorstab = Menu(mb, tearoff=0)
    mb.add_cascade(label='Operators', menu=operatorstab)
    operatorstab.add_command(label='Addition', command=addition)
    operatorstab.add_command(label='Subtraction', command=subtraction)
    operatorstab.add_command(label='Multiplication', command=multiplication)
    operatorstab.add_command(label='Division', command=division)
    operatorstab.add_command(label='Square', command=squareroot)
    window.config(menu=operatorstab)

    lbl1 = Label(window, text='''Calculation's''', bg='BLUE', fg='WHITE', relief='ridge').grid(row=0, column=2)

    rb1 = Radiobutton(window, text='Addition', indicatoron=0, pady=3, fg='RED', bd=2, command=addition).grid(row=1, column=0)
    rb2 = Radiobutton(window, text='Subtraction', indicatoron=0, pady=3, fg='RED', bd=2, command=subtraction).grid(row=1, column=1)
    rb3 = Radiobutton(window, text='Multiplication', indicatoron=0, pady=3, fg='RED', bd=2, command=multiplication).grid(row=1, column=2)
    rb4 = Radiobutton(window, text='Division', indicatoron=0, pady=3, fg='RED', bd=2, command=division).grid(row=1, column=3)
    rb5 = Radiobutton(window, text='Square Root', indicatoron=0, pady=3, fg='RED', bd=2, command=squareroot).grid(row=1, column=4)

    mainloop()

def quiz():
    global cmb1, cmb2, cmb3, cmb4, cmb5, correct
    test = Tk()
    test.title('''Kevin's Quiz/Test''')
    test.configure(bg='LIGHTGREEN')
    correct = []

    lbl1 = Label(test, text='''Pop Quiz''', bg='BLUE', fg='WHITE', relief='ridge').grid(row=0, column=0)

    lblq1 = Label(test, text='Which NFL team has won the most Super Bowls?', bg='LIGHTGREEN', fg='RED').grid(row=1, column=0)
    cmb1 = ttk.Combobox(test, values=('A: Pittsburgh Steelers', 'B: New York Giants', 'C: Denver Broncos', 'D: Dallas Cowboys'))
    cmb1.grid(row=2, column=0)

    lblq2 = Label(test, text='Which of these words is NOT a term used in Cricket?', bg='LIGHTGREEN', fg='RED').grid(row=3, column=0)
    cmb2 = ttk.Combobox(test, values=('A: Fumble', 'B: Wicket', 'C: Crease', 'D: Bowler'))
    cmb2.grid(row=4, column=0)

    lblq3 = Label(test, text='Which of these cities is well known for holding an automobile race every year around Memorial Day?', bg='LIGHTGREEN', fg='RED').grid(row=5, column=0)
    cmb3 = ttk.Combobox(test, values=('A: Los Angeles', 'B: Indianapolis', 'C: Miami', 'D: Austin'))
    cmb3.grid(row=6, column=0)

    lblq4 = Label(test, text='Which player holds the record for the most consecutive games with a hit?', bg='LIGHTGREEN', fg='RED').grid(row=7, column=0)
    cmb4 = ttk.Combobox(test, values=('A: Pete Rose', 'B: Rogers Hornsby', 'C: Joe DiMaggio', 'D: Ty Cobb'))
    cmb4.grid(row=8, column=0)

    lblq5 = Label(test, text='Which player has the most points scored in NBA history?', bg='LIGHTGREEN', fg='RED').grid(row=9, column=0)
    cmb5 = ttk.Combobox(test, values=('A: Michael Jordan', 'B: Wilt Chamberlain', 'C: Kobe Bryant', 'D: Kareem Abdul-Jabbar'))
    cmb5.grid(row=10, column=0)

    btn1 = Radiobutton(test, text='Finish', indicatoron=0, pady=3, fg='RED', bd=2, command=quizanswer).grid(row=11, column=0)
    btn2 = Radiobutton(test, text='Quit', indicatoron=0, pady=3, fg='RED', bd=2, command=test.destroy).grid(row=11, column=1)



    mainloop()

    return cmb1, cmb2, cmb3, cmb4, cmb5, correct

def quizanswer():
    q1_answer = 'A: Pittsburgh Steelers'
    q2_answer = 'A: Fumble'
    q3_answer = 'B: Indianapolis'
    q4_answer = 'C: Joe DiMaggio'
    q5_answer = 'D: Kareem Abdul-Jabbar'

    if cmb1.get() == q1_answer:
        correct.append('1')

    else:
        correct.append(0)

    if cmb2.get() == q2_answer:
        correct.append('1')

    else:
        correct.append(0)

    if cmb3.get() == q3_answer:
        correct.append('1')

    else:
        correct.append(0)

    if cmb4.get() == q4_answer:
        correct.append('1')

    else:
        correct.append(0)

    if cmb5.get() == q5_answer:
        correct.append('1')

    else:
        correct.append(0)

    total = 0
    for i in correct:
        total = total + int(i)

    if total >= 3:
        messagebox.showinfo('Quiz Results', '''Congratulations you've scored {}/5! \n\nThe correct awnsers where: \n\n{} \n{} \n{} \n{} \n{}'''.format(total, q1_answer, q2_answer, q3_answer, q4_answer, q5_answer))

    elif total < 3:
        messagebox.showerror('Quiz Results', '''Nice try! You've scored {}/5! \n\nThe correct awnsers where: \n\n{} \n{} \n{} \n{} \n{}'''.format(total, q1_answer, q2_answer, q3_answer, q4_answer, q5_answer))


def main():
    main = Tk()
    main.title('''Kevin's Hub''')
    main.configure(bg='LIGHTGREEN')
    lbl1 = Label(main, text='''Kevin's Application''', bg='BLUE', fg='WHITE', relief='ridge').grid(row=0, column=1)
    rb1 = Radiobutton(main, text='Calculate', indicatoron=0, pady=3, fg='RED', bd=2, command=calculatewindow).grid(row=1, column=0)
    rb2 = Radiobutton(main, text='Guess The Number', indicatoron=0, pady=3, fg='RED', bd=2, command=guessthenumber).grid(row=1, column=1)
    rb3 = Radiobutton(main, text='Test/Quiz', indicatoron=0, pady=3, fg='RED', bd=2,command=quiz).grid(row=1, column=2)
    rb4 = Radiobutton(main, text='Quit', indicatoron=0, pady=3, fg='RED', bd=2, command=main.quit).grid(row=2, column=1)
    mainloop()

main()
